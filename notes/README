-----------------------------------------
1. INSTALL MYSQL 
-----------------------------------------
$ yum install mysql-server mysql php-mysql
$ service mysqld start



-----------------------------------------
2. INSTALL MYSQL-JDBC-CONNECTOR 
-----------------------------------------
download mysql-connector-java-5.1.25.tar.gz, and 
put the jar files in $CLASSPATH



-----------------------------------------
3. CONFIGURE MYSQL
-----------------------------------------
login in mysql use root 
$ mysql -u root


3.1 add new user 
-----------------------------------------
username:xbli, password:xbli; 
If you want to change this, please change the corresponding items 
in util/Setting.java and recompile the system.

check current users
mysql> SELECT User, Host, Password FROM mysql.user;

add user 'xbli'
mysql> GRANT ALL PRIVILEGES ON *.* TO 'xbli'@'localhost' IDENTIFIED BY 'xbli' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

mysql> GRANT ALL PRIVILEGES ON *.* TO 'xbli'@'%' IDENTIFIED BY 'xbli' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

login in with xbli
$ mysql -u xbli -p


3.2 create database
-----------------------------------------
mysql> create database demo2pc;
mysql> show databases;
mysql> use demo2pc;

If you want to change this, do change the corresponding items in 
util/Setting.java and recompile the system.


3.3 create tables
-----------------------------------------
mysql> show engines;
Be sure to use InnoDB as engine. because it support Transaction. 

several ways to use InnoDB:
mysql> CREATE TABLE employee (id INT) ENGINE = InnoDB;
mysql> ALTER TABLE employee ENGINE = InnoDB;
(refer: http://parasjain.net/2010/06/08/how-to-switch-to-innodb-database-in-mysql/)

for boc site:
CREATE TABLE BOCACCOUNT (
    ID      INT NOT NULL AUTO_INCREMENT,
    NAME    VARCHAR(64) NOT NULL,
    BALANCE INT NOT NULL,
    PRIMARY KEY (ID)) ENGINE = InnoDB;

for ccb site:
CREATE TABLE CCBACCOUNT (
    ID      INT NOT NULL AUTO_INCREMENT,
    NAME    VARCHAR(64) NOT NULL,
    BALANCE INT NOT NULL,
    PRIMARY KEY (ID)) ENGINE = InnoDB;

for cbrc site:
CREATE TABLE DEAL (
    ID      INT NOT NULL AUTO_INCREMENT,
    NAME    VARCHAR(64) NOT NULL,
    AMOUNT  INT NOT NULL,
    FROMBK  VARCHAR(64) NOT NULL,
    TOBK    VARCHAR(64) NOT NULL,
    DATE    TIMESTAMP DEFAULT NOW(),
    PRIMARY KEY (ID)) ENGINE = InnoDB;

mysql> show tables;

You can have these tables on different nodes, each of which 
should have the database called demo2pc.


3.4 insert initial values
-----------------------------------------
because we want to transfer money from BOC to CCB

INSERT INTO BOCACCOUNT values (default, 'john', 4000);
INSERT INTO CCBACCOUNT values (default, 'john', 0);



-----------------------------------------
4. BUILD THE SYSTEM
-----------------------------------------
$ ./build.sh

You can costomize the system by changing items in util/Setting.java
such as: you can run the whole system on one nodes;



-----------------------------------------
5. RUN THE SYSTEM
-----------------------------------------


5.1 start up AppServers (BOC/CCB/CBRC)
-----------------------------------------
on corresponding nodes, if you deploy system on multiple nodes

$ java dbmgr/BOCAppSvr
$ java dbmgr/CCBAppSvr
$ java dbmgr/CBRCAppSvr
there is console output to keep track of system states


5.2 start up Transaction Manager (TManager)
-----------------------------------------
$ java server/TManager
there is console output to keep track of system states


5.3 issue requests from client
-----------------------------------------
e.g.
$ java client/Client john 10 boc ccb 10.1.2.31 8888
user john transfer 10 from boc to ccb
connecting to server 10.1.2.31:8888
result: [committed]

$ java client/Client mike 10 boc ccb 10.1.2.31 8888
user mike transfer 10 from boc to ccb
connecting to server 10.1.2.31:8888
result: [aborted]

(aborted, because there is no mike account in database)


5.4 check logs
-----------------------------------------
2PC writes logs before each action taking place
the logs are stored in ./logs
